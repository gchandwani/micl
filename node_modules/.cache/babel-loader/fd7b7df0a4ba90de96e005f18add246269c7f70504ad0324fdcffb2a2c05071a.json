{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const playersApi = createApi({\n  reducerPath: 'playersApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: process.env.NODE_ENV === 'development' ? process.env.REACT_APP_DEV_MODE_API : 'https://my-json-server.typicode.com/hardik98/backend_micl'\n  }),\n  endpoints: builder => ({\n    fetchPlayers: builder.query({\n      query: () => 'players',\n      providesTags: ['players']\n    }),\n    fetchTeams: builder.query({\n      query: () => 'teams',\n      providesTags: ['teams']\n    }),\n    soldPlayer: builder.mutation({\n      query: ({\n        id,\n        updatedPlayer\n      }) => ({\n        url: `players/${id}`,\n        method: 'PUT',\n        body: updatedPlayer\n      }),\n      invalidatesTags: ['players']\n    }),\n    createTeams: builder.mutation({\n      query: newTeam => ({\n        url: '/teams',\n        method: 'POST',\n        body: newTeam\n      }),\n      invalidatesTags: ['teams']\n    }),\n    addSoldPlayer: builder.mutation({\n      query: ({\n        id,\n        updatedTeam\n      }) => ({\n        url: `teams/${id}`,\n        method: 'PUT',\n        body: updatedTeam\n      }),\n      invalidatesTags: ['teams', 'players']\n    })\n  })\n});\nexport const {\n  useFetchPlayersQuery,\n  useLazyFetchPlayersQuery,\n  useSoldPlayerMutation,\n  useAddSoldPlayerMutation,\n  useFetchTeamsQuery,\n  useLazyFetchTeamsQuery,\n  useCreateTeamsMutation\n} = playersApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","playersApi","reducerPath","baseQuery","baseUrl","process","env","NODE_ENV","REACT_APP_DEV_MODE_API","endpoints","builder","fetchPlayers","query","providesTags","fetchTeams","soldPlayer","mutation","id","updatedPlayer","url","method","body","invalidatesTags","createTeams","newTeam","addSoldPlayer","updatedTeam","useFetchPlayersQuery","useLazyFetchPlayersQuery","useSoldPlayerMutation","useAddSoldPlayerMutation","useFetchTeamsQuery","useLazyFetchTeamsQuery","useCreateTeamsMutation"],"sources":["/Users/gchandwani/Desktop/mobiquityInternal/MICL/MICL/src/redux/api/playersApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const playersApi = createApi({\n  reducerPath: 'playersApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl:\n      process.env.NODE_ENV === 'development'\n        ? process.env.REACT_APP_DEV_MODE_API\n        : 'https://my-json-server.typicode.com/hardik98/backend_micl',\n  }),\n  endpoints: (builder) => ({\n    fetchPlayers: builder.query({\n      query: () => 'players',\n      providesTags: ['players'],\n    }),\n    fetchTeams: builder.query({\n      query: () => 'teams',\n      providesTags: ['teams'],\n    }),\n    soldPlayer: builder.mutation({\n      query: ({ id, updatedPlayer }) => ({\n        url: `players/${id}`,\n        method: 'PUT',\n        body: updatedPlayer,\n      }),\n      invalidatesTags: ['players'],\n    }),\n    createTeams: builder.mutation({\n      query: (newTeam) => ({\n        url: '/teams',\n        method: 'POST',\n        body: newTeam,\n      }),\n\n      invalidatesTags: ['teams'],\n    }),\n    addSoldPlayer: builder.mutation({\n      query: ({ id, updatedTeam }) => ({\n        url: `teams/${id}`,\n        method: 'PUT',\n        body: updatedTeam,\n      }),\n      invalidatesTags: ['teams', 'players'],\n    }),\n  }),\n});\n\nexport const {\n  useFetchPlayersQuery,\n  useLazyFetchPlayersQuery,\n  useSoldPlayerMutation,\n  useAddSoldPlayerMutation,\n  useFetchTeamsQuery,\n  useLazyFetchTeamsQuery,\n  useCreateTeamsMutation,\n} = playersApi;\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,OAAO,MAAMC,UAAU,GAAGF,SAAS,CAAC;EAClCG,WAAW,EAAE,YAAY;EACzBC,SAAS,EAAEH,cAAc,CAAC;IACxBI,OAAO,EACLC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,GAClCF,OAAO,CAACC,GAAG,CAACE,sBAAsB,GAClC;EACR,CAAC,CAAC;EACFC,SAAS,EAAGC,OAAO,KAAM;IACvBC,YAAY,EAAED,OAAO,CAACE,KAAK,CAAC;MAC1BA,KAAK,EAAEA,CAAA,KAAM,SAAS;MACtBC,YAAY,EAAE,CAAC,SAAS;IAC1B,CAAC,CAAC;IACFC,UAAU,EAAEJ,OAAO,CAACE,KAAK,CAAC;MACxBA,KAAK,EAAEA,CAAA,KAAM,OAAO;MACpBC,YAAY,EAAE,CAAC,OAAO;IACxB,CAAC,CAAC;IACFE,UAAU,EAAEL,OAAO,CAACM,QAAQ,CAAC;MAC3BJ,KAAK,EAAEA,CAAC;QAAEK,EAAE;QAAEC;MAAc,CAAC,MAAM;QACjCC,GAAG,EAAG,WAAUF,EAAG,EAAC;QACpBG,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEH;MACR,CAAC,CAAC;MACFI,eAAe,EAAE,CAAC,SAAS;IAC7B,CAAC,CAAC;IACFC,WAAW,EAAEb,OAAO,CAACM,QAAQ,CAAC;MAC5BJ,KAAK,EAAGY,OAAO,KAAM;QACnBL,GAAG,EAAE,QAAQ;QACbC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEG;MACR,CAAC,CAAC;MAEFF,eAAe,EAAE,CAAC,OAAO;IAC3B,CAAC,CAAC;IACFG,aAAa,EAAEf,OAAO,CAACM,QAAQ,CAAC;MAC9BJ,KAAK,EAAEA,CAAC;QAAEK,EAAE;QAAES;MAAY,CAAC,MAAM;QAC/BP,GAAG,EAAG,SAAQF,EAAG,EAAC;QAClBG,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEK;MACR,CAAC,CAAC;MACFJ,eAAe,EAAE,CAAC,OAAO,EAAE,SAAS;IACtC,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EACXK,oBAAoB;EACpBC,wBAAwB;EACxBC,qBAAqB;EACrBC,wBAAwB;EACxBC,kBAAkB;EAClBC,sBAAsB;EACtBC;AACF,CAAC,GAAGhC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}